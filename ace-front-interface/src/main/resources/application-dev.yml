spring:
  application:
    name: ace-front-interface
  jackson:
    date-format: yyyy-MM-dd HH:mm:ss
    time-zone: GMT+8
    default-property-inclusion: non_null
  redis:
    database: 0
    host: ${REDIS_HOST:192.168.1.198}
    port: ${REDIS_PORT:6379}
    pool:
    max-active: 20
    password: udaxredis8888
  datasource:
    name: test
    url: jdbc:mysql://${MYSQL_HOST:192.168.1.198}:${MYSQL_PORT:3306}/wallet?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&allowMultiQueries=true&serverTimezone=PRC&useSSL=false
    username: root
    password: ENC(I98pRGIfN/ysHu/7FEoEPaTjbV9XQ9dY)
    # 使用druid数据源
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: com.mysql.jdbc.Driver
    filters: stat
    maxActive: 20
    initialSize: 1
    maxWait: 60000
    minIdle: 1
    timeBetweenEvictionRunsMillis: 60000
    minEvictableIdleTimeMillis: 300000
    validationQuery: select 'x'
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    poolPreparedStatements: true
    maxOpenPreparedStatements: 20
#  rabbitmq:
#    host: ${RABBIT_MQ_HOST:localhost}
#    port:  ${RABBIT_MQ_PORT:5672}
#    username: guest
#    password: guest
#  sleuth:
#    enabled: true
#    http:
#      legacy:
#        enabled: true
#  cloud:
#    consul:
#      enabled: true
#      host: localhost
#      port: 8500
#      discovery:
#        healthCheckPath: /actuator/health
#        healthCheckInterval: 5s
#        instanceId: ${spring.application.name}:${vcap.application.instance_id:${spring.application.instance_id:${random.value}}}
#        register: true
#        enabled: true

mybatis:
  basepackage: com.github.wxiaoqi.security.common
  xmlLocation: classpath:mapper/**/*.xml
  mapper-locations: "classpath*:mapper/**/*.xml"
  configuration:
   log-impl: org.apache.ibatis.logging.stdout.StdOutImpl

server:
  port: 9776 #启动端口

feign:
  httpclient:
    enabled: false
  okhttp:
    enabled: true

ribbon:
  eureka:
    enabled: true
  ReadTimeout: 60000
  ConnectTimeout: 60000
  MaxAutoRetries: 0
  MaxAutoRetriesNextServer: 1
  OkToRetryOnAllOperations: false

hystrix:
  threadpool:
    default:
      coreSize: 1000 ##并发执行的最大线程数，默认10
      maxQueueSize: 1000 ##BlockingQueue的最大队列数
      queueSizeRejectionThreshold: 500 ##即使maxQueueSize没有达到，达到queueSizeRejectionThreshold该值后，请求也会被拒绝
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 10000

#eureka:
#  instance:
#    statusPageUrlPath: /actuator/info
#    healthCheckUrlPath: /actuator/health
#    # docker 部署开启
#    prefer-ip-address: true
#    ip-address: 127.0.0.1
#  client:
#    serviceUrl:
#      #            defaultZone: http://localhost:8761/eureka/
#      # docker 部署开启
#      defaultZone: http://${EUREKA_HOST:localhost}:${EUREKA_PORT:8761}/eureka/



jwt:
  token-header: Authorization
  expire: 14400
  rsa-secret: xx1WET12^%3^(WE45

client:
  merchantKey: 11223344
  tokenKey: 1234567890
  walletKey: 11223344
  signKey: 12345678
logging:
  level:
    #        tk.mybatis: DEBUG
    com.udax.front: DEBUG

sftp:
  host: 192.168.1.198
  port: 22
  timeout: 5000
  aliveMax: 10
  nginx:
   path: http://${sftp.host}/upload/
  user:
   name: sftp
   password: udaxsftp8888
blockchain:
  pushaddress:
   url: http://192.168.1.198:8888/coinWallet/getNewAddress?
  ip: 192.168.1.198
udax:
  quotation: http://192.168.1.88:8003/app/quotation/quotation
  lastprices: http://192.168.1.162:8080/wallet/getLastPrices
ifTestEnv:
  value: true
jasypt:
  encryptor:
    password: test
ifr:
  service_version: 1.0
  partner_code: DEMO0006
  #回调地址
  backend_url: http://web.udas.pro:9776//wallet/ifr/backendNotify
  #重定向地址
  redirect_url: http://web.udas.pro:88/#/tradeResult
  merchantKey: SA7SsikDx6dFelHeniKeJgADhTRd8IPI
tencent:
  identifier:
  SDKAPPID:
  SECRETKEY:



